# Depends: autoconf2.13 rust alsa-utils nspr clang rust cbindgen icu nodejs gtk3 unzip libwebp libxcomposite libxdamage libxcursor libice libsm libvpx nasm nss libevent

name=firefox
version=122.0.1
release=1
source="https://ftp.mozilla.org/pub/${name}/releases/${version}/source/${name}-${version}.source.tar.xz
	fix-target-detection.patch"

pkg_build() {
	pkg-config --exist && _opt=",pulseaudio"

        export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system
        export MOZBUILD_STATE_PATH=${PWD}/mozbuild

cat > .mozconfig << EOF
ac_add_options --prefix=/usr
ac_add_options --libdir=/usr/lib
ac_add_options --enable-strip
ac_add_options --enable-release
ac_add_options --enable-rust-simd
ac_add_options --enable-audio-backends=alsa$_opt
ac_add_options --enable-install-strip
ac_add_options --enable-official-branding
ac_add_options --enable-application=browser
ac_add_options --enable-optimize
ac_add_options --with-system-ffi
ac_add_options --with-system-jpeg
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-pixman
ac_add_options --with-system-png
ac_add_options --with-system-webp
ac_add_options --with-system-zlib
ac_add_options --without-wasm-sandboxed-libraries
ac_add_options --disable-eme
#ac_add_options --disable-dbus
ac_add_options --disable-tests
ac_add_options --disable-vtune
ac_add_options --disable-updater
ac_add_options --disable-jemalloc
ac_add_options --disable-elf-hack
ac_add_options --disable-callgrind
ac_add_options --disable-profiling
ac_add_options --disable-necko-wifi
ac_add_options --disable-crashreporter
ac_add_options --disable-accessibility
ac_add_options --disable-debug
ac_add_options --disable-debug-symbols
ac_add_options --disable-parental-controls
ac_add_options --disable-system-extension-dirs
EOF

	if [ -e '/usr/bin/ccache' ]; then
                echo 'ac_add_options --enable-ccache' >> .mozconfig
                PATH=$(echo ${PATH} | awk -v RS=: -v ORS=: '/ccache/ {next} {print}' | sed 's/:*$//')
        fi

        # XXX: failed to build with clang
        export CC=gcc
        export CXX=g++

        export CFLAGS="$CFLAGS -w"
        export CXXFLAGS="$CXXFLAGS -w"
        export LDFLAGS="$LDFLAGS -Wl,-rpath=/usr/lib/firefox,--enable-new-dtags"

        ./mach build
        ./mach install

        mkdir -pv $PKG/usr/share/applications
        mkdir -pv $PKG/usr/share/pixmaps

        cat > $PKG/usr/share/applications/firefox.desktop << EOF
[Desktop Entry]
Encoding=UTF-8
Name=Firefox Web Browser
Comment=Browse the World Wide Web
GenericName=Web Browser
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/xml;text/mml;text/html;application/xhtml+xml;application/vnd.mozilla.xul+xml;x-scheme-handler/http;x-scheme-handler/https
StartupNotify=true
EOF

        mkdir -p $PKG/usr/share/pixmaps
        ln -sfv /usr/lib/firefox/browser/chrome/icons/default/default128.png \
                $PKG/usr/share/pixmaps/firefox.png
}
